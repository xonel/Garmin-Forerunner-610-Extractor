Documentation of protocol used to transfer data from Garmin Forerunner 610
===============================================================================

Introduction
----------------------------------------------------------------------------

All examples and bit references use MSB 0 bit numbering - i.e are numbered 
from the most significant byte as 0 and then going right. Bytes will also
be indexed from left to right.

    Byte (8 bits)
    ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓
    ┃ 1 ┃ 0 ┃ 1 ┃ 1 ┃ 1 ┃ 0 ┃ 0 ┃ 1 ┃
    ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛
      ┊   ┊   ┊   ┊   ┊   ┊   ┊   ┊
      ┊   ┊   ┊   ┊   ┊   ┊   ┊   ┊
      0   1   2   3   4   5   6   7
      Indices, from left to right.

The protocol used to connect to the Garmin Forerunner 610 actually consist
for three different protocols. The base layer is the Ant protocol ![1] which
is very well documented ![2]. On top of that there is a proprietary protocol
for Garmin Ant units for pairing and other related features. And on top of
that, or rather after a connection have been established there is the Ant-fs
protocol ![3].

[1]: http://en.wikipedia.org/wiki/ANT_(network)              "Ant on Wikipedia"
[2]: http://www.thisisant.com/                               "Ant Wireless"
[3]: http://www.thisisant.com/ant/auto-data-transfer-ant-fs  "Ant-fs"

Ant protocol
----------------------------------------------------------------------------

Is well documented, with no particular license to view it, and various open
source implementations exists. We'll not discuss it further in this document.

Garmin sync and pair
----------------------------------------------------------------------------

### Special settings ###

Some special settings for Ant used by Garmin. In hexadecimal numbers.

* Network key:    a8 a4 23 b9 f5 5e 63 c1
* Channel:        0
* Channel period: 00 10
* Search timeout: ff
* RF frequency:   32

### Searching for devices ##############################################

To start searching for a watch, issue the following commands:

1. Reset system
2. Set network key
3. Assign channel
4. Set channel period
5. Set channel search timeout
6. Set channel rf frequency

Then open the channel and wait for broadcasts from the Garmin device.

### Device found #####################################################

The device will continuously broadcast message like the one specified 
here at the start of each channel period, as specified by the Ant
protocol.

Watch -> Host broadcast: sent when watch is found.

    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 43 ┃ 2c ┃ 00 ┃ 03 ┃ 41 ┃ 05 ┃ 01 ┃ 00 ┃
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
      ┊    ┊    ┊    ┊    ┊    ┊    ┊    ┊
      ┊    ┊    ┊    ┊    ┊    ┊    ┊    └ Probably unused
      ┊    ┊    ┊    ┊    ┊    ┊    ┊ 
      ┊    ┊    ┊    ┊    ┊    ┊    └ 01, don't have peer -- 00 have peer
      ┊    ┊    ┊    ┊    ┊    ┊
      ┊    ┊    ┊    ┊    └┄┄┄┄┴┄ Clock ID?
      ┊    ┊    ┊    ┊
      ┊    ┊    ┊    └ Extra header length?
      ┊    ┊    ┊
      ┊    ┊    └ Phase/message type?
      ┊    ┊
      ┊    └ Flags:
      ┊      ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓
      ┊      ┃ ? ┃ ? ┃ d ┃ ? ┃ p ┃ ? ┃ ? ┃ ? ┃ bit 7 = Set for Garmin Forerunner 305
      ┊      ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛ bit 6 = ?
      ┊                ┊       ┊               bit 5 = Set for Garmin Forerunner 50
      ┊                ┊       └ Can pair              and Garmin Foreunner 610
      ┊                ┊
      ┊                └ New data
      ┊
      └ Always 0x43 from watch

Host -> Watch broadcast: a request for a private channel/private frequency:

    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 02 ┃ 07 ┃ 04 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
      ┊    ┊    ┊    ┊    ┊    ┊    ┊    ┊
      ┊    ┊    ┊    ┊    └┄┄┄┄┴┄┄┄┄┴┄┄┄┄┴┄ My ID, could be anything
      ┊    ┊    ┊    ┊
      ┊    ┊    ┊    └ Extra header length?
      ┊    ┊    ┊
      ┊    ┊    └ New frequency (0x07, 0x19, 0x22 have been observed)
      ┊    ┊
      ┊    └ Phase/message type?
      ┊
      └ Always 0x44 from us

Issue Ant commands:

* New period:      0x00 0x10
* Search timeout:  0x03
* RF frequency:    As specified above (0x07 in this case)


Host -> Watch broadcast: a request for the watch ID and name:

    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 04 ┃ 01 ┃ 00 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
                ┊         ┊    ┊    ┊    ┊
                ┊         └┄┄┄┄┴┄┄┄┄┴┄┄┄┄┴┄ My ID, same
                ┊         
                └ Unknown
     
     When My ID is present, its four bytes does not seem to be
     counted in the extra header length field.

Watch -> Host burst: The clock answers with a burst message:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 43 ┃ 2c ┃ 01 ┃ 03 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 44 ┃ 84 ┃ 00 ┃ 0e ┃ ec ┃ 6a ┃ 66 ┃ e4 ┃ 2
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 46 ┃ 6f ┃ 72 ┃ 65 ┃ 72 ┃ 75 ┃ 6e ┃ 6e ┃ 3
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 65 ┃ 72 ┃ 20 ┃ 36 ┃ 31 ┃ 30 ┃ 00 ┃ 00 ┃ 4
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
    
    Row 1:   Same as last/current broadcast
    
    Row 2:   Byte 0-2: Unknown, Byte 3: Name string length (includes one null
                                        char at the end of the string)
             Byte 4-7: Garmin Unit ID - uint32, little-endian
             
    Row 3-4: Name string: "Garmin Forerunner 610", remaining space is
             zero padded to next even octet. Unknown character encoding.
    

Here we can either pair with device or send old pair info - can only pair if 
the pair bit in the flags field is set.


### Already paired with watch ###########################################

Host -> Watch burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 04 ┃ 03 ┃ 08 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ ea ┃ 55 ┃ df ┃ a6 ┃ 57 ┃ 30 ┃ 47 ┃ 99 ┃ 2
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 3
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛

    Row 1:   Request for ?
    
    Row 2:   Pair ID, length matches extra header length
    
    Row 3:   Unused
             

Watch -> Host burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 43 ┃ 24 ┃ 01 ┃ 03 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 44 ┃ 84 ┃ 01 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 2
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛

    Row 1:   Response for ?
    
    Row 2:   Byte 0-2: Unknown, Byte 3-7: Probably unused


### Pair with watch ######################################################

Host -> Watch broadcast:

    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 05 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
    
    Probably a request to pair, or something indicating that we are waiting
    on the user to answer if we want to pair with this watch. It gets sent
    periodically during this wait.


And when the user has indicated it wants to pair with this watch:


Host -> Watch burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 04 ┃ 02 ┃ 0a ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 33 ┃ 38 ┃ 33 ┃ 31 ┃ 39 ┃ 31 ┃ 37 ┃ 32 ┃ 2
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 39 ┃ 32 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 3
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 4
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
    
    Row 1:   Request to pair, 0a = 10, length of Garmin Unit ID (as string)
    
    Row 2-3: Garmin Unit ID (as string): 10 characters. This will be
             displayed on the watch. Unclear if this really need to match
             the Garmin Unit ID sent by the watch.
    

The Garmin Unit ID string is then displayed on the watch and the user has
the choice of accepting or rejecting the pair. After accepting the following
message is sent:


Watch -> Host burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 43 ┃ 2c ┃ 03 ┃ 03 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 44 ┃ 84 ┃ 01 ┃ 08 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 2
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ ea ┃ 55 ┃ df ┃ a6 ┃ 57 ┃ 30 ┃ 47 ┃ 99 ┃ 3
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛

    Row 1: Response to pair
    
    Row 2: Byte 0-2: Unknown, Byte 3: Possibly length of pair string,
           Byte 4-7: Probably unused
    
    Row 3: Pair ID
       
       
### Continue #########################################################

Watch -> Host broadcast: sent when watch is ok to exchange data?

    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 43 ┃ 2c ┃ 02 ┃ 03 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛

!!From here there is probably Ant-fs data/initialization:!!


Host -> Watch burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 0a ┃ fe ┃ ff ┃ 10 ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 2
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛

    Row 1: Unknown request
    Row 2: Probably unused

Watch -> Host burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 43 ┃ 2c ┃ 03 ┃ 03 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 44 ┃ 8a ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 2
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 10 ┃ 00 ┃ 00 ┃ 00 ┃ 10 ┃ 00 ┃ 00 ┃ 00 ┃ 3
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 4
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛
    
     Row 1: Unknown response

Host -> Watch burst:

                                              Row
    ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
    ┃ 44 ┃ 0c ┃ 03 ┃ 03 ┃ 8b ┃ 00 ┃ 00 ┃ 00 ┃ 1 
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 03 ┃ 00 ┃ 00 ┃ 00 ┃ 2d ┃ 37 ┃ 6b ┃ 29 ┃ 2
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 10 ┃ 00 ┃ 00 ┃ 00 ┃ 10 ┃ 00 ┃ 00 ┃ 00 ┃ 3
    ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
    ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ 00 ┃ b5 ┃ e0 ┃ 4
    ┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛

    Row 1: Request for ?
    Row 2: Byte 4-7 varies
    Row 4: Byte 6-7 varies, checksum?

FIT and Ant-fs
----------------------------------------------------------------------------

TODO


    0x2e, 0x46, 0x49, 0x52


    43 2c 03 03 8b 00 00 00     3 * 8 protocol header, first is usual header
    44 89 00 00 00 02 00 00
    00 00 00 00 5c 02 00 00

    0e 10 7a 00 4c 02 00 00     0e=14 header length, protocol version (ushort)10=16, 
                                profile version 7a 00=122, data size 4c 02 00 00=588
    2e 46 49 54 00 00 40 00     type 2e 46 49 54 = ".FIT", 2 extra bytes 00 00.

      8 per row


    43 2c 03 03 8b 00 00 00
    44 89 00 00 5c 00 00 00
    00 02 00 00 5c 02 00 00


    req 0.1

    a40950004409000000000000b00000
    a40950a000010000000000005c0000

    ans 0.1

    a4095000432c03038b00000019 header
    a409502044890000f0000000e0 header
    a409504000000000f00000004d header

                               .-- id/request number
                               V  .- unknown
    a409506001100000000000008c    V
    a40950200000000000000000dd
    a40950400100010c00000050e1 1, 00, 01, 0c, 0000
    a409506000e019000000000064 (00e0, )
    a40950200200010d00000030e3 2, 00, 01, 0d, 0000
    a40950400000040000000000b9 (0000,
    a409506003008001ffff00908f 3, 00, 80, 01, ffff
    a40950205c0200000000000083 (5c02, type), device file
    a409504004008002ffff00d0eb 4, 00, 80, 02, ffff
    a40950601d0200000000000082 (1d02, type), settings file
    a409502005008003030000d088 5, 00, 80, 03, 0003
    a4095040ac0400000000000015 (ac04, type), sport settings file
    a409506006008003010000d0c9 6, 00, 80, 03, 0001
    a4095020ac0400000000000075 (ac04, type), sport settings file
    a409504007008004000000b08e 7, 00, 80, 04, 0000
    a409506020090000decf5929d5 (2009) act 0
    a409502008008004010000b0e0 8, 00, 80, 04, 0001
    a4095040a031000026775c2908 (a031) act 1
    a409506009008004020000b0a2 9, 00, 80, 04, 0002
    a4095020b8170000d0285d29fe (b817) act 2
    a40950400a008004030000b080 10, 00, 80, 04, 0003
    a4095060e9020000e6cf5d292b (e903) act 3
    a40950200b008004040000a0f6 11, 00, 80, 04, 0004
    a40950408b030000e8775e29dd (8b03) act 4
    a40950600c008008ffff00d0c9 12, 00, 80, 08, ffff
    a40950208b0000000000000056 (8b00)
    a40950400d008009ffff0090a9 13, 00, 80, 09, ffff
    a40950604800000000000000d5 (4800) weight?
    a40950200e00800affff0090c9 14, 00, 80, 0a, ffff
    a40950407d00000000000000c0 (7d00) total?
    a40950e0000000000000fbf610 (end, checksum/size?)



    req 1.1: 
    a40950004409030000000000b3
    a40950a000010000000000005c

    ans 1.1

    a4095000432c03038b00000019
    a4095020448900000002000012
    a4095040000000005c020000e3

    a40950600e107a004c020000b7 
    a40950202e46495400004000e8 .FIT
    a40950400000000603048c0434
    a409506004860102840202841c
    a409502005028400010000ecb3
    a40950406a66e4ffffffff0154
    a4095060004105ffff01410099
    a4095020003100020002840169
    a4095040010201f000ff4200f2
    a409506000230002050c0703b1
    a40950200284023030362d4200
    a4095040313334362d3030f060
    a409506000023030362d4231f7
    a40950203334352d3030f00032
    a4095040023030362d423133e4
    a409506034352d3030f0000243
    a40950203030362d44313037b4
    a4095040342d303020034300c4
    a40950600001000115048c0303
    a40950200000000044000025bc
    a4095040000402100703028429
    a409506000010001010a040092
    a40950200000000000000000dd
    a40950400000000000000001bc
    a40950600001020453657474ac
    a4095020696e677300000000ce
    a40950400000000001000206b8
    a40950600453706f72747300a0
    a40950200000000000000000dd
    a409504000020003060441639c
    a4095060746976697469657394
    a4095020000000000000c80015
    a4095040040a04576f726b6ff9
    a40950607574730000000000ef
    a40950200000003200050e04e0
    a4095040436f757273657300f3
    a409506000000000000000009d
    a40950203200060e04536368bb
    a40950406564756c65730000b3
    a409506000000000000100079b
    a409502006044c6f63617469e3
    a40950406f6e730000000000cf
    a40950600000010008060457c1
    a40950206569676874000000aa
    a40950400000000000000001bc
    a409506000090204546f7461bc
    a40950206c73000000000000c2
    a40950400000000001000a02b4
    a40950600444656275676769c6
    a40950206e67000000000000d4
    a40950400014000d0a450000eb
    a4095060260004010284030239
    a409502084000100020100055e
    a40950400300010002000504bc
    a409506000010002000505009e
    a40950200100020005060001dc
    a40950400002000508000600b4
    a409506003000535000b0003a6
    a40950200005090008000300da
    a4095040050a001600030005a2
    a40950600e0004000300051081
    a40950200003000300054a0092
    a40950400100030005110003a8
    a4095060000300050f00100084
    a40950a0000000000000b89570

    req 1.2: 
    a40950004409030000020000b1
    a40950a00000b8950000000070


    ans 1.2:
    a4095000432c03038b00000019
    a4095020448900005c0000004c
    a4095040000200005c020000e1

    a40950600b01051300c800064f
    a409502002051400b03606024c
    a40950400520006400060205fd
    a40950601b0032000501051ca9
    a409502000c8000701051d000b
    a409504064000801051e0014df
    a40950600009004600002700f5
    a40950200401028403028400db
    a40950400100020102060e00b5
    a409506004000305061400018c
    a40950200004000614000100ca
    a40950400401412300000000da
    a40950e000000000000000001d





    req 2.1

    a40950004409040000000000b4
    a40950a000010000000000005c

    ans 2.1

    a4095000432c03038b00000019
    a4095020448900000002000012
    a4095040000000001d020000a2

    a40950600e107a000d020000f6
    a40950202e46495400004000e8
    a40950400000000603048c0434
    a409506004860102840202841c
    a409502005028400010000ecb3
    a40950406a66e4ffffffff0154
    a4095060004105ffff0240009b
    a4095020003100020002840169
    a4095040010200f000ff4000f1
    a4095060000200180104860206
    a40950200486080284000102d2
    a40950400301000401000501be
    a4095060010901000a01000b94
    a409502001000c01000d0102df
    a40950400e01020f01021001ad
    a409506000110100120100158b
    a40950200100160100170100dd
    a40950401801001901001a01a7
    a4095060001c01000000000080
    a40950200000000000ffff00dd
    a4095040000100ff0003020f4d
    a40950603c3201000101000193
    a40950200001feff400000039e
    a409504000130010070402843b
    a409506001010002010203019e
    a40950200205010006010007db
    a40950400100080102090102bd
    a40950600a01020b01020c0191
    a4095020000d01000e010010ce
    a40950400100110100120100bf
    a409506018010200466f7265b8
    a409502072756e6e65722036db
    a4095040313000007e040123e4
    a4095060ac00000000b9b9b988
    a40950200100000100025540ca
    a40950400000040004fe0284c5
    a409506001028b000100020117
    a40950200000000060400100fc
    a40950404000000500060304f9
    a409506086fe028401028b02e9
    a409502002840001000401005f
    a40950400000000000000000bd
    a409506000e803000040000036
    a40950200600120010070304d9
    a409504086fe028404028b05cb
    a4095060028b06028b07028b15
    a40950200802840902840a02d4
    a4095040840b02840c01000db4
    a409506001000e01020f01009f
    a40950201001001101001201cf
    a4095040000042696b65203189
    a409506000000000000000009d
    a40950200000000000000000dd
    a40950400000000000000000bd
    a4095060300800005f00fffffa
    a409502001ff00000000ff00dc
    a409504042696b65203200008a
    a409506000000000000000009d
    a40950200000000001000000dc
    a4095040000000000000300885
    a409506000005f00ffff01ff3c
    a409502000000000ff00426909
    a40950406b65203300000000a0
    a409506000000000000000009d
    a40950a00000000000005ca7a6


    req 2.2

    a40950004409040000020000b6
    a40950a000005ca700000000a6


    ans 2.2

    a4095000432c03038b00000019
    a4095020448900001d0000000d
    a4095040000200001d020000a0

    a409506000000200000000009f
    a40950200000000030080000e5
    a40950405f00ffff01ff00001c
    a40950600000ff83f400000015
    a40950a000000000000000005d


    1

    req 3.1

    a40950004409060000000000b6 (req typ nr 6 in index, ac04)
    a40950a000010000000000005c

    ans 3.1

    a4095000432c03038b00000019
    a4095020448900000002000012
    a409504000000000ac04000015

    a40950600e107a009c04000061
    a40950202e46495400004000e8
    a40950400000000603048c0434
    a409506004860102840202841c
    a409502005028400010000ecb3
    a40950406a66e4ffffffff0154
    a409506000410501000340009b
    a4095020003100020002840169
    a4095040010200f000ff4000f1
    a4095060000700060302840811
    a4095020028401010202010258
    a409504005010007010000ff40
    a4095060ffffffc2ff01ff40e1
    a409502000000c0004031007c1
    a409504004028400010001013e
    a4095060000052756e6e696ebd
    a409502067001d0001000300a5
    a409504000001d0001004000e1
    a4095060000d00130404860500
    a40950200485060485fe0284a3
    a40950400202840802840a02bf
    a409506084010100030100071c
    a409502001000901000b0102dc
    a40950400c01000d01000e01b3
    a4095060000f01001001001496
    a4095020010015010000a086ee
    a40950400100ffffff7fffff3c
    a4095060ff7f0000540b6d052a
    a4095020ffff010100000400d9
    a40950400001000100014000fc
    a4095060000e00050404020591
    a40950200400fe0284010100a1
    a40950400301020009030400b3
    a409506006382318000001039a
    a409502000090304000d1600c8
    a40950400e01000102000102b2
    a40950600304073a231802009e
    a40950200003000102030422f8
    a40950400e3b060300000340ce
    a4095060000010000402048609
    a4095020fe02840101000301a7
    a40950400000c0270900000053
    a4095060000000a086010001bb
    a40950200001000064000000b8
    a4095040020002004000004ab7
    a409506000060204860404869d
    a4095020fe02840101000301a7
    a40950400005010000e09304ce
    a40950600060ea000000000017
    a409502000004000001100068a
    a4095040fe0284030284050247
    a409506084010100020100041e
    a409502001000000007800b410
    a40950400000000000010000bc
    a409506000000001000000029e
    a4095020003c0078000200009b
    a4095040000300c800f4010380
    a40950600000400000080003d6
    a4095020021007fe02840101b0
    a409504002004852205a6f6ede
    a4095060652030005d4852208f
    a40950205a6f00006100485293
    a4095040205a6f6e65203100b2
    a40950606f4852205a6f0100fc
    a40950a00000000000003bd8be

    req 3.2

    a40950004409060000020000b4 xxxx I    header,       data I have
    a40950a000003bd800000000be xxbb xxxx last check,   unknown

    ans 3.2

    a4095000432c03038b00000019
    a4095020448900000002000012 xxxx I    header,       length of data
    a409504000020000ac04000017 I    I    data u have,  total data

    a409506074004852205a6f6e88
    a4095020652032008248522012
    a40950405a6f02008800485218
    a4095060205a6f6e6520330090
    a4095020944852205a6f030045
    a40950409b004852205a6f6e47
    a409506065203400a748522071
    a40950205a6f0400af00485259
    a4095040205a6f6e65203500b6
    a4095060b90000020000050023
    a4095020c24000000900030257
    a40950401007fe028401028455
    a409506000505752205a6f6eb3
    a40950206520300050575220dd
    a40950405a0000ffff005057e0
    a409506052205a6f6e652031c0
    a409502000505752205a0100f3
    a4095040ffff00505752205a92
    a40950606f6e652032005057ec
    a409502052205a0200ffff00f7
    a4095040505752205a6f6e65f6
    a4095060203300505752205aa1
    a40950200300ffff005057528b
    a4095040205a6f6e65203400b7
    a4095060505752205a0400ff49
    a4095020ff00505752205a6f62
    a40950406e65203500505752f6
    a4095060205a0500ffff0050b2
    a40950205752205a6f6e6520e6
    a40950403600505752205a06a2
    a409506000ffff0050575220e8
    a40950205a6f6e6520370002f6
    a4095040000000a80700ffff12
    a40950604000003500030110fa
    a409502007fe02840002840024
    a40950405370656564205a6fef
    a40950606e65203000009f021b
    a409502000009f0200536c6f10
    a4095040772057616c6b007ea5
    a40950600357616c6b01007ed0
    a4095020030057616c6b0000ef
    a40950403d05466173742057d2
    a4095060616c02003d050046ec
    a40950206173742057616c6baa
    a409504000fc06536c6f770363
    a409506000fc0600536c6f7740
    a4095020204a6f670000bb080c
    a40950404a6f67000400bb0848
    a4095060004a6f67007a0a46e9
    a4095020617374204a6f6700d9
    a40950400005007a0a004661ef
    a40950607374204a6f670000f8
    a4095020390c536c6f770600c9
    a4095040390c00536c6f77208f
    a409506052756e0000b70f523e
    a4095020756e000700b70f0079
    a409504052756e00f414537037
    a409506072696e740000321ab4
    a40950200800f4140053707264
    a4095040696e740000321a4dab
    a40950606178205370090032bc
    a40950201a004d617820537090
    a409504065656400ed22000016
    a409506001000a00ed22400019
    a40950a00000000000007cc8e9

    req 3.3

    a40950004409060000040000b2
    a40950a000007cc800000000e9

    ans 3.3

    a4095000432c03038b00000019
    a409502044890000ac000000bc
    a409504000040000ac04000011

    a4095060000a0004fe028402e9
    a4095020028401010203010259
    a40950400000000000000000bd
    a409506001000000000000029e
    a40950200000000000000300de
    a40950400000000000040000b9
    a4095060000000000500000098
    a40950200000000600000000db
    a40950400000070000000000ba
    a4095060000800000000000095
    a4095020090000000000000ade
    a40950400000000000000b00b6
    a409506000000000000c000091
    a4095020000000000d000000d0
    a40950400000000e00000000b3
    a409506000000f000000000092
    a40950200010000000000000cd
    a40950401100000000000012be
    a409506000000000000013008e
    a40950200000000000140000c9
    a40950400000000015000000a8
    a409506000002dc40000000074
    a40950a000000000000000005d

    req 4.1

    a40950004409050000000000b5
    a40950a000010000000000005c


